name: Deploy ASP.NET Core and React app to Azure

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the code
      uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore src/WebApplication1/WebApplication1.csproj

    - name: Build the backend app
      run: dotnet build --configuration Release --no-restore src/WebApplication1/WebApplication1.csproj

    - name: Publish the backend app
      run: dotnet publish -c Release -o ${{ github.workspace }}/publish --no-build src/WebApplication1/WebApplication1.csproj

    - name: Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '20'

    - name: Build frontend app
      run: |
        cd src/web-application1-front
        npm install
        npm run build

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: apikey-rotation-mvp-backend  # Reemplaza con el nombre de tu App Service
        slot-name: 'production'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ github.workspace }}/publish

    - name: Deploy to Azure Static Web Apps
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_API_KEY_ROTATION_MVP_FRONTEND }}
        repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for GitHub integrations (i.e. PR comments)
        action: 'upload'
        app_location: 'src/web-application1-front' # Ubicación de tu aplicación frontend
        output_location: 'src/web-application1-front/build' # Ubicación de la salida de tu aplicación frontend
        api_location: '' # Deja en blanco si tu API está en Azure App Service
